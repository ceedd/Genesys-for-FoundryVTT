export class genesysUtil{


  static  diceArrayToString(array){
        if(Array.isArray(array)){
          var  diceArray = ["a","b","p","s","d","c"];
          var  diceMsg= "/gen";
            for (let i = 0; i < 6; i++) {
                if(array[i]!=0){
                diceMsg += " ";
                diceMsg += array[i];
                diceMsg += diceArray[i];
            }
                
              } 
        }
        return diceMsg;
    }

static    abilityToArray(){
        return [0,0,0,0,0,0]
    }
        //Index is as follows 0= ability 1= boost 2= proficency 3=setback 4=difficulty 5=challenge
static    abilityToArray(characteristic,skill) {

            //determine how many yellow and green acording to rule for skill checks
            //green=ability yellow= proficency
            if(characteristic>skill){
                console.log("ding1");
               var green=characteristic-skill;
               var yellow=characteristic-green;
            }
            else if(characteristic==skill){
                console.log("ding2");
                green=0;
                yellow=skill;
            }
            else if(characteristic<skill)
            {
                console.log("ding3");
                green=skill-characteristic;
                yellow=skill-green;
            }
           var array=[green,0,yellow,0,0,0];
        //    array[0]=green;
        //    array[2]=yellow;
        console.log(array);
        return array;
    }
    //wants a array that looks like the one generated by abilityToArray
    // 100. counts as a success 1 is a advantage
    //later 0.001 will be the pc/npc tiebraker
    static genesysInitiative(array){
        var yellowDie =[0,100,100,200,200,1,101,101,101,2,2,100];
        var greenDie =[0,100,100,200,1,1,101,2];
        var initiative=0;
        //green
        if(array[0]>0){
            for (let i = 0; i < array[0]; i++) {
            initiative= initiative + greenDie[Math.floor(Math.random()*8)];   
            console.log(initiative);      
        } 
    }
        //yellow
        if(array[2]>0)  {        
        for (let i = 0; i < array[2]; i++) {
            initiative=initiative+ yellowDie[Math.floor(Math.random()*12)];    
            console.log(initiative);        
        }    
    }
        console.log(initiative);
        return initiative;
    }





}